#%RAML 0.8
title: org.opent2t.sample.binaryswitch.superpopular
version: v1.0

schemas:
  - BinarySwitch: !include oic.r.switch.binary.json
  - OutletPlatform: !include org.opent2t.sample.binaryswitch.superpopular.json
  - Subscription: |
      {
        "type": "object",
        "properties": {
          "callbackUrl": { "type": "string" },
          "expiration": { "type": "number" },
          "response": { "type": "string"}
        }
      }

traits:
  - interface-actuator:
      queryParameters:
        if:
          enum: ["oic.if.a", "oic.if.baseline"]

resourceTypes:
  - !include org.opent2t.availability.yaml

#
# Device relative URIs
#
/devices/{deviceid}:
  /power:
    displayName: Power
    is: [ interface-actuator ]

    get:
      responses:
        200:
          body:
            application/json:
              schema: BinarySwitch
              example: |
                {
                  "rt": ["oic.r.switch.binary"],
                  "id": "unique_example_id",
                  "value": false
                }
    post:
      body:
        application/json:
          schema: BinarySwitch
          example: |
            {
              "id": "unique_example_id",
              "value": true
            }
      responses:
        200:
          body:
            application/json:
              schema: BinarySwitch
              example: |
                {
                  "id": "unique_example_id",
                  "value": true
                }
                
#
# Platform Level URIs
#
/:
  displayName: Platform
  get:
    responses:
      200:
        body:
          application/json:
            schema: OutletPlatform
            example: |
              {
                "opent2t": {
                  "schema": "org.opent2t.sample.binaryswitch.superpopular",
                  "translator": "opent2t-translator-com-opent2t-p-binaryswitch@0.1.1",
                  "controlId": 123
                },
                "availability": "online",
                "pi": "9D2D20D8-10B0-4913-B62F-CEF8218E1E14C",
                "mnmn": "Contoso",
                "n": "Bedroom Outlet",
                "rt": ["org.opent2t.sample.binaryswitch.superpopular],
                "entities": [
                  {
                    "rt": ["oic.d.smartplug"],
                    "n": "Device 1",
                    "di": "0DFDA91C-F864-4718-8108-919E3106D0A1",
                    "icv": "core.1.1.0",
                    "dmv": "res.1.1.0",
                    "resources": [
                      {
                        "href": "/power",
                        "rt": ["oic.r.switch.binary"],
                        "if": ["oic.if.a", "oic.if.baseline"]
                      }
                    ]
                  }
                ]
              }

/?$expand:
  displayName: Platform
  get:
    responses:
      200:
        body:
          application/json:
            schema: OutletPlatform
            example: |
              {
                "opent2t": {
                  "schema": "org.opent2t.sample.binaryswitch.superpopular",
                  "translator": "opent2t-translator-com-opent2t-p-binaryswitch@0.1.1",
                  "controlId": 123
                },
                "availability": "online",
                "pi": "9D2D20D8-10B0-4913-B62F-CEF8218E1E14C",
                "mnmn": "Contoso",
                "n": "Bedroom Outlet",
                "rt": ["org.opent2t.sample.binaryswitch.superpopular"],
                "entities": [
                  {
                    "rt": ["oic.d.smartplug"],
                    "n": "Device 1",
                    "di": "0DFDA91C-F864-4718-8108-919E3106D0A1",
                    "icv": "core.1.1.0",
                    "dmv": "res.1.1.0",
                    "resources": [
                      {
                        "href": "/power",
                        "id": "power",
                        "rt": ["oic.r.switch.binary"],
                        "value": true
                      }
                    ]
                  }
                ]
              }

/subscribe:
  description: |
    This resource manages subscriptions to changes on this device.
  displayName: Subscribe
    
  post:
    description: |
        Creates or refreshes a subscription to this outlet.  This method can be called twice, first with
        a callback URL (verificationRequest will be ignored), and the second time with the parameters of an http GET to the
        callback Url server for verification of the subscription (in which case callback Url will be ignored). The second call
        will construct a response that should be returned to the notifications server.
    body:
      application/json:
        schema: Subscription
        example: |
          {
            "callbackUrl": "http://myserver.com",
          }    
    responses:
       200:
        body:
          application/json:
            schema: Subscription
            example: |
                {
                  "callbackUrl":"http://myserver.com",
                  "expiration": "123456678",
                  "response": { "plain text response" }
                }
       400:
          body:
            application/json:
              example: { "message": "Bad request" }
       403:
          body:
            application/json:
              example: { "message": "Subscription is denied" }

  delete:
    description: Unsubscribes to notifications to a callback Url
    body:
      application/json:
        schema: Subscription
        example: |
          {
            "callbackUrl": "http://myserver.com",
          } 
    responses:
      200:
        body:
          application/json:
          example: {}

/?$availability: |
  description: This resource shows device availability
  displayName: Availability
  is: [ interface-sensor ]
  type: {availabilityType}